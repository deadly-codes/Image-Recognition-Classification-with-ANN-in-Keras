# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Q3C1WDjZLGvd46QR6p2d8j23OszTCtmc

# Libraries of Deep Learning
1.Theano

2.Keras

3.Tenserflow

4.Pytorch

# Importing Libraries
"""

import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import tensorflow as tf
from tensorflow import keras

"""# Importing the dataset"""

data = keras.datasets.cifar10

df = data.load_data()

(x_train, y_train),(x_test, y_test)= df

x_train = x_train.astype('float32')   
x_test = x_test.astype('float32')
x_train /= 255.0              
x_test /= 255.0

plt.matshow(x_train[0])

"""# ANN Model Creation

"""

from tensorflow.keras import Sequential
from tensorflow.keras.layers import Dense, Flatten, Conv2D, MaxPooling2D

model=tf.keras.models.Sequential([
    tf.keras.layers.Conv2D(32, (3, 3), padding='same', activation='relu'),
    tf.keras.layers.Conv2D(64, (3, 3), padding='same',activation='relu'),
    tf.keras.layers.MaxPooling2D((2,2),padding='same',strides=2),
    tf.keras.layers.Flatten(input_shape=(32,32,3)),
    tf.keras.layers.Dense(128,activation='relu'),
    tf.keras.layers.Dense(128,activation='relu'),
    tf.keras.layers.Dense(10,activation='softmax')
])

model.compile(
    optimizer='adam',
    loss='sparse_categorical_crossentropy',
    metrics=['accuracy']
)

"""# Train/Fit the Model"""

model.fit(x_train, y_train, epochs=10)

y_pred = model.predict(x_train)

y_pred

y_test

model.evaluate(x_test,y_test)

loss, accuracy = model.evaluate(x_test,y_test)

print("Accuracy :",accuracy)